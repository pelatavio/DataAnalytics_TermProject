install.packages(c("tidyverse", "rnassqs"))
library(rnassqs)
Sys.setenv(NASSQS_TOKEN = 4EC1A587-AA62-3741-90C9-BE2F4CF7632C)
Sys.setenv(NASSQS_TOKEN = "4EC1A587-AA62-3741-90C9-BE2F4CF7632C")
#Load in API key
nassqs_auth(key = (Sys.getenv("NASSQS_TOKEN")))
params <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
prodn_practice_desc = "IRRIGATED",
class_desc = "CASH, CROPLAND",
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
nassqs_record_count(params)
d <- nassqs(params)
rm(d)
irrigated <- nassqs(params)
View(irrigated)
params2 <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
prodn_practice_desc = "IRRIGATED",
class_desc = list("CASH, CROPLAND","CASH, PASTURELAND"),
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
nassqs_record_count(params2)
params2 <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
prodn_practice_desc = list("IRRIGATED","NON_IRRIGATED"),
class_desc = list("CASH, CROPLAND","CASH, PASTURELAND"),
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
nassqs_record_count(params2)
params2 <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
prodn_practice_desc = list("IRRIGATED","NON_IRRIGATED"),
class_desc = "CASH, CROPLAND",
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
nassqs_record_count(params2)
params2 <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
prodn_practice_desc = "NON_IRRIGATED",
class_desc = "CASH, CROPLAND",
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
nassqs_record_count(params2)
params2 <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
prodn_practice_desc = "NON-IRRIGATED",
class_desc = "CASH, CROPLAND",
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
nassqs_record_count(params2)
non-irrigated <- nassqs(params2)
non_irrigated <- nassqs(params2)
params3 <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
class_desc = "CASH, PASTURELAND",
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
nassqs_record_count(params3)
pastureland <- nassqs(params3)
summary(irrigated$year)
summary irrigated
summary(irrigated)
library(lubridate)
?lubridate
View(irrigated)
#clean irrigated
irrigated2<- irrigated%>%
mutate(
year = year(year)
)
library(dplyr)
#clean irrigated
irrigated2<- irrigated%>%
mutate(
year = year(year)
)
#clean irrigated
irrigated2<- irrigated%>%
mutate(
year = as.numeric(year)
)
#How far back does the data go?
summary(irrigated2$year)
#clean non irrigated
non_irrigated2<- non_irrigated%>%
mutate(
year = as.numeric(year)
)
#How far back does the data go?
summary(non_irrigated2$year)
#clean pastureland
pastureland2<- pastureland%>%
mutate(
year = as.numeric(year)
)
#How far back does the data go?
summary(pastureland2$year)
library(rnassqs)
library(dplyr)
#Load in API key
nassqs_auth(key = (Sys.getenv("NASSQS_TOKEN")))
area_params <- list(
source_desc = "CENSUS",
sector_desc = "ECONOMICS",
commodity_desc = "AG LAND",
agg_level_desc = "COUNTY",
unit_desc = "ACRES",
statisticcat_desc = "AREA",
)
area_params <- list(
source_desc = "CENSUS",
sector_desc = "ECONOMICS",
commodity_desc = "AG LAND",
agg_level_desc = "COUNTY",
unit_desc = "ACRES",
statisticcat_desc = "AREA"
)
nassqs_record_count(area_params)
#Load in API key
nassqs_auth(key = (Sys.getenv("NASSQS_TOKEN")))
nassqs_record_count(area_params)
Sys.setenv(NASSQS_TOKEN = '4EC1A587-AA62-3741-90C9-BE2F4CF7632C ')
Sys.setenv(NASSQS_TOKEN = "4EC1A587-AA62-3741-90C9-BE2F4CF7632C")
#Load in API key
nassqs_auth(key = (Sys.getenv("NASSQS_TOKEN")))
nassqs_record_count(area_params)
area_params <- list(
source_desc = "CENSUS",
sector_desc = "ECONOMICS",
commodity_desc = "AG LAND",
prodn_practice_desc = "CROPLAND",
agg_level_desc = "COUNTY",
unit_desc = "ACRES",
statisticcat_desc = "AREA"
)
nassqs_record_count(area_params)
area_params <- list(
source_desc = "CENSUS",
sector_desc = "ECONOMICS",
commodity_desc = "AG LAND",
class_desc = "CROPLAND",
agg_level_desc = "COUNTY",
unit_desc = "ACRES",
statisticcat_desc = "AREA"
)
nassqs_record_count(area_params)
nassq_params()
library(rnassqs)
nassqs_params()
cropland_area <- nassqs(area_params)
View(cropland_area)
area_params2 <- list(
source_desc = "CENSUS",
sector_desc = "ECONOMICS",
commodity_desc = "AG LAND",
class_desc = "PASTURELAND",
agg_level_desc = "COUNTY",
unit_desc = "ACRES",
statisticcat_desc = "AREA"
)
nassqs_record_count(area_params2)
pastureland_area <- nassqs(area_params2)
usethis::edit_r_environ()
install.packages("usethis")
library(usethis)
usethis::edit_r_environ()
NFHL = "NFHL_12_20220922.gdb"
st_layers(NFHL)
pacman::p_load(sf, readr, raster,tidyr, dplyr, lubridate,haven, stringr, readxl, tigris,ggplot2, tmap)
st_layers(NFHL)
hazard<-st_read(dsn = NFHL, layer = "S_FLD_HAZ_AR")
View(hazard)
florida<-states%>%
filter(STUSPS == "FL")
pacman::p_load(sf, readr, raster,tidyr,tidyverse, dplyr, lubridate,haven, stringr, readxl, tigris,ggplot2, tmap)
states<-states(cb=TRUE)
florida<-states%>%
filter(STUSPS == "FL")
merge<- st_join(flordia, hazard)
merge<- st_join(flordia, hazard)
merge<- st_join(florida, hazard)
View(florida)
counties<-counties(cb=TRUE)
florida<-counties%>%
filter(STUSPS == "FL")
merge<- st_join(florida, hazard)
View(counties)
View(counties)
View(hazard)
library(rnassqs)
library(dplyr)
library(tidyr)
#Load in API key
nassqs_auth(key = (Sys.getenv("NASSQS_TOKEN")))
###IRRIGATED RENT####
#query irrigated rent
params <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
prodn_practice_desc = "IRRIGATED",
class_desc = "CASH, CROPLAND",
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
#check under 50,000 observations
nassqs_record_count(params)
irrigated <- nassqs(params)
#clean irrigated
irrigated2<- irrigated%>%
mutate(
year = as.numeric(year)
)
#How far back does the data go?
summary(irrigated2$year)
###NON_IRRIGATED RENT####
#query non irrigated rent
params2 <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
prodn_practice_desc = "NON-IRRIGATED",
class_desc = "CASH, CROPLAND",
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
#check under 50,000 observations
nassqs_record_count(params2)
non_irrigated <- nassqs(params2)
#clean non irrigated
non_irrigated2<- non_irrigated%>%
mutate(
year = as.numeric(year)
)
#How far back does the data go?
summary(non_irrigated2$year)
###PASTURELAND RENT####
#query pastureland rent
params3 <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
class_desc = "CASH, PASTURELAND",
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
#check under 50,000 observations
nassqs_record_count(params3)
pastureland <- nassqs(params3)
#clean pastureland
pastureland2<- pastureland%>%
mutate(
year = as.numeric(year)
)
#How far back does the data go?
summary(pastureland2$year)
###AREA####
#county level data of cropland area in acres
area_params <- list(
source_desc = "CENSUS",
sector_desc = "ECONOMICS",
commodity_desc = "AG LAND",
class_desc = "CROPLAND",
agg_level_desc = "COUNTY",
unit_desc = "ACRES",
statisticcat_desc = "AREA"
)
nassqs_record_count(area_params)
#short_desc is same in data set as on web tool, however there are more observations in data than there are records on web
cropland_area <- nassqs(area_params)
cropland_area2 <- cropland_area%>%
mutate(
year = as.numeric(year)
)%>%
filter(year >= 2007)
#county level data of pastureland area in acres
area_params2 <- list(
source_desc = "CENSUS",
sector_desc = "ECONOMICS",
commodity_desc = "AG LAND",
class_desc = "PASTURELAND",
agg_level_desc = "COUNTY",
unit_desc = "ACRES",
statisticcat_desc = "AREA"
)
nassqs_record_count(area_params2) #16809 obs but the number of records is 15350
pastureland_area <- nassqs(area_params2)
pastureland_area2 <- pastureland_area%>%
mutate(
year = as.numeric(year)
)
###JOIN AREA AND RENTS####
#area is every 5 years where as rents are every year
#linear interpolation for area
#how many times should I repeat the years?
cropland_area_year<- cropland_area2%>%
group_by(county_name, state_name)%>%
complete(year = full_seq(2007:2017, 1))
cropland_area_year1<-cropland_area_year%>%
arrange(state_name, county_name, year)
transform(
cropland_area_year1,
Value = approx(seq_along(year)[!is.na(Value)], Value[!is.na(Value)], seq_along(year))$y
)
View(cropland_area_year1)
summary(cropland_area_year1$Value)
cropland_area_year2<-cropland_area_year1%>%
transform(
cropland_area_year1,
Value = approx(seq_along(year)[!is.na(Value)], Value[!is.na(Value)], seq_along(year))$y
)
summary(cropland_area_year2$Value)
#merge with cropland area with irrigated rents
irrigated_rent_area<- left_join(irrigated2,cropland_area_year2, by = c("state_name","county_name","year"), keep = TRUE)
#merge with cropland area with non irrigated rents
non_irrigated_rent_area<- left_join(non_irrigated2,cropland_area_year2, by = c("state_name","county_name","year"), keep = TRUE)
summary(irrigated_rent_area$year)
View(non_irrigated_rent_area)
View(non_irrigated_rent_area)
summary(cropland_area_year1$year)
summary(cropland_area_year1$Value)
summary(cropland_area_year2$Value)
#add up to 2022 and replace 2018 - 2022 values with 2017 values
cropland_area_year3<-cropland_area_year2%>%
mutate(
year = seq(2008:2022)
)
#add up to 2022 and replace 2018 - 2022 values with 2017 values
cropland_area_year3<-cropland_area_year2%>%
transform(
year = seq(2008:2022)
)
#add up to 2022 and replace 2018 - 2022 values with 2017 values
cropland_area_year3<-cropland_area_year2%>%
transform(
year = full_seq(2008:2022, 1)
)
#expand year vector and creating NA values
cropland_area_year<- cropland_area2%>%
group_by(county_name, state_name)%>%
complete(year = full_seq(2007:2022, 1))
table(cropland_area_year$year)
cropland_area_year1<-cropland_area_year%>%
arrange(state_name, county_name, year)
summary(cropland_area_year1$Value)
summary(cropland_area_year1$year)
cropland_area_year2<-cropland_area_year1%>%
transform(
cropland_area_year1,
Value = approx(seq_along(year)[!is.na(Value)], Value[!is.na(Value)], seq_along(year))$y
)
summary(cropland_area_year2$Value)
install.packages("skimr")
library(skimr)
skim(cropland_area_year2)
test<-cropland_area_year2%>%
filter(year == 2017)
summary(test$Value)
test<-cropland_area_year2%>%
filter(year == 2018)
summary(test$Value)
#replace 2018 - 2022 values with 2017 values
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
replace_with_na(condiition = (year = c(2018:2022)) %in% Value)
#replace 2018 - 2022 values with 2017 values
library(tidyr)
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
replace_with_na(condiition = (year = c(2018:2022)) %in% Value)
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
mutate(Value = repalce(Value, year = c(2018:2022), NA))
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
mutate(Value = replace(Value, year = c(2018:2022), NA))
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
#mutate(Value = replace(Value, year = c(2018:2022), NA))
replace_with_na_at(.vars = "Value",
condition = ~.year == c(2018:2022))
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
#mutate(Value = replace(Value, year = c(2018:2022), NA))
replace_with_na_at(.vars = "Value",
condition = ~.year == c(2018:2022))
install.packages("naniar")
#replace 2018 - 2022 values with 2017 values
library(naniar)
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
#mutate(Value = replace(Value, year = c(2018:2022), NA))
replace_with_na_at(.vars = "Value",
condition = ~.year == c(2018:2022))
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
#mutate(Value = replace(Value, year = c(2018:2022), NA))
replace_with_na_at(.vars = "Value",
condition = ~year == c(2018:2022))
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
#mutate(Value = replace(Value, year = c(2018:2022), NA))
replace_with_na_at(.vars = "Value",
condition = ~."year" == c(2018:2022))
cropland_area_year3<-cropland_area_year2%>%
group_by(county_name, state_name)%>%
#mutate(Value = replace(Value, year = c(2018:2022), NA))
replace_with_na_at(.vars = "Value",
condition = ~.x == c(2018:2022))  #left off here
Sys.setenv(NASSQS_TOKEN = "4EC1A587-AA62-3741-90C9-BE2F4CF7632C")
#Load in API key
nassqs_auth(key = (Sys.getenv("NASSQS_TOKEN")))
library(rnassqs)
library(dplyr)
library(tidyr)
Sys.setenv(NASSQS_TOKEN = "4EC1A587-AA62-3741-90C9-BE2F4CF7632C")
#Load in API key
nassqs_auth(key = (Sys.getenv("NASSQS_TOKEN")))
###IRRIGATED RENT####
#query irrigated rent
params <- list(
sector_desc = "ECONOMICS",
commodity_desc = "RENT",
prodn_practice_desc = "IRRIGATED",
class_desc = "CASH, CROPLAND",
agg_level_desc = "COUNTY",
domain_desc = "TOTAL"
)
#check under 50,000 observations
nassqs_record_count(params)
gc()
gc()
#pacman::p_load(sf, readr, raster,tidyr,tidyverse, dplyr, lubridate,haven, stringr, readxl, tigris,ggplot2, tmap)
pacman::p_load(sf, readr,tidyverse, dplyr, haven, tigris, ggplot2, tmap)
library(sf)
library(readr)
library(tidyverse)
library(dplyr)
library(tigris)
library(ggplot2)
setwd("/Users/m28t112/OneDrive - Montana State University/Documents")
NFHL = "NFHL_12_20220922.gdb"
st_layers(NFHL)
hazard<-st_read(dsn = NFHL, layer = "S_FLD_HAZ_AR")
setwd("/Users/m28t112/OneDrive - Montana State University/Documents/GitHub/DataAnalytics_TermProject")
#load in clean florida tract income and race data
florida_tract <- read_csv("data/clean/Florida_Race_and_Income_tract.csv")
counties<-counties(cb=TRUE)
florida_geometry<-counties%>%
filter(STUSPS == "FL")%>%
rename("COUNTY" = "NAMELSAD")
#add geometry to florida census tract data
merge<- left_join(florida_tract, florida_geometry, by = "COUNTY")
merge<-st_as_sf(merge)
View(hazard)
table(hazard$FLD_ZONE)
View(merge)
View(hazard)
View(merge)
View(hazard)
# panel map
tm_shape(hazard) + tm_polygons("FLD_ZONE")
library(tmap)
# panel map
tm_shape(hazard) + tm_polygons("FLD_ZONE")
